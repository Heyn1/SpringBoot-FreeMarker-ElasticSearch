<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.dao.CategoryMapper">
    <resultMap id="BaseResultMap" type="com.example.entity.Category">
        <id column="category_id" jdbcType="INTEGER" property="categoryId"/>
        <result column="category" jdbcType="VARCHAR" property="category"/>
        <result column="sort_order" jdbcType="INTEGER" property="sortOrder"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Base_Column_List">
        category_id, category, sort_order, status, create_time, update_time
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from demand_category
        where category_id = #{categoryId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from demand_category
        where category_id = #{categoryId,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.example.entity.Category">
        insert into demand_category (category_id, category, sort_order,
        status, create_time, update_time
        )
        values (#{categoryId,jdbcType=INTEGER}, #{category,jdbcType=VARCHAR}, #{sortOrder,jdbcType=INTEGER},
        #{status,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.example.entity.Category">
        insert into demand_category
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="categoryId != null">
                category_id,
            </if>
            <if test="category != null">
                category,
            </if>
            <if test="sortOrder != null">
                sort_order,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="categoryId != null">
                #{categoryId,jdbcType=INTEGER},
            </if>
            <if test="category != null">
                #{category,jdbcType=VARCHAR},
            </if>
            <if test="sortOrder != null">
                #{sortOrder,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.example.entity.Category">
        update demand_category
        <set>
            <if test="category != null">
                category = #{category,jdbcType=VARCHAR},
            </if>
            <if test="sortOrder != null">
                sort_order = #{sortOrder,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where category_id = #{categoryId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.example.entity.Category">
        update demand_category
        set category = #{category,jdbcType=VARCHAR},
        sort_order = #{sortOrder,jdbcType=INTEGER},
        status = #{status,jdbcType=INTEGER},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=TIMESTAMP}
        where category_id = #{categoryId,jdbcType=INTEGER}
    </update>
    <select id="selectAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from demand_category
        where status = 1
    </select>
</mapper>